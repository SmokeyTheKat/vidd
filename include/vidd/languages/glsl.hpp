#define E_CHARACTERS "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
#define E_NUMBERS "0123456789"
const Language glsl {
/*name*/    "glsl",
/*exts*/    { ".glsl", ".vs", ".fs" },
/*syntax*/  {
/*hglt types*/       true,
/*hglt consts*/      true,
/*hglt func calls*/  true,
/*fcall any braket*/ false,
/*hglt nums*/        true,
/*string tokens*/    { "'", "\"" },
/*multi strings*/    { },
/*multi comments*/   { 
						 { "/*", "*/" },
						 { "#if 0", "#endif" }
					 },
/*single comments*/  { "//" },
/*operators*/        { "+", "-", "*", "/", "=", "!", "~", "<", ">", "?", ":", "&", "%", "|", "^" },
/*syntax ranges*/    {
						 { { Syntax::Range::Type::UntilLineEnd, true, "#", "" }, StyleType::Macro },
						{ { Syntax::Range::Type::While, true, "$", E_CHARACTERS }, StyleType::KeyWord },
					 },
/*syntax words*/     { 
						 { "$", StyleType::KeyWord },
						 { "invariant", StyleType::Type },
						 { "restrict", StyleType::Type },
						 { "readonly", StyleType::Type },
						 { "writeonly", StyleType::Type },
						 { "precision", StyleType::Type },
						 { "coherent", StyleType::Type },
						 { "import", StyleType::KeyWord },
						 { "in", StyleType::KeyWord },
						 { "flat", StyleType::KeyWord },
						 { "out", StyleType::KeyWord },
						 { "attribute", StyleType::KeyWord },
						 { "varying", StyleType::KeyWord },
						 { "uniform", StyleType::KeyWord },
						 { "lowp", StyleType::Type },
						 { "mediump", StyleType::Type },
						 { "highp", StyleType::Type },
						 { "vec2", StyleType::Type },
						 { "vec3", StyleType::Type },
						 { "vec4", StyleType::Type },
						 { "dvec2", StyleType::Type },
						 { "dvec3", StyleType::Type },
						 { "dvec4", StyleType::Type },
						 { "bvec2", StyleType::Type },
						 { "bvec3", StyleType::Type },
						 { "bvec4", StyleType::Type },
						 { "ivec2", StyleType::Type },
						 { "ivec3", StyleType::Type },
						 { "ivec4", StyleType::Type },
						 { "uvec2", StyleType::Type },
						 { "uvec3", StyleType::Type },
						 { "uvec4", StyleType::Type },
						 { "bvec2", StyleType::Type },
						 { "bvec3", StyleType::Type },
						 { "bvec4", StyleType::Type },
						 { "mat2", StyleType::Type },
						 { "mat3", StyleType::Type },
						 { "mat4", StyleType::Type },
						 { "mat2x2", StyleType::Type },
						 { "mat2x3", StyleType::Type },
						 { "mat2x4", StyleType::Type },
						 { "mat3x2", StyleType::Type },
						 { "mat3x3", StyleType::Type },
						 { "mat3x4", StyleType::Type },
						 { "mat4x2", StyleType::Type },
						 { "mat4x3", StyleType::Type },
						 { "mat4x4", StyleType::Type },
						 { "sampler1D", StyleType::Type },
						 { "isampler1D", StyleType::Type },
						 { "usampler1D", StyleType::Type },
						 { "sampler2D", StyleType::Type },
						 { "isampler2D", StyleType::Type },
						 { "usampler2D", StyleType::Type },
						 { "sampler3D", StyleType::Type },
						 { "isampler3D", StyleType::Type },
						 { "usampler3D", StyleType::Type },
						 { "samplerCube", StyleType::Type },
						 { "isamplerCube", StyleType::Type },
						 { "usamplerCube", StyleType::Type },
						 { "sampler2DRect", StyleType::Type },
						 { "isampler2DRect", StyleType::Type },
						 { "usampler2DRect", StyleType::Type },
						 { "sampler1DArray", StyleType::Type },
						 { "isampler1DArray", StyleType::Type },
						 { "usampler1DArray", StyleType::Type },
						 { "sampler2DArray", StyleType::Type },
						 { "isampler2DArray", StyleType::Type },
						 { "usampler2DArray", StyleType::Type },
						 { "samplerCubeArray", StyleType::Type },
						 { "isamplerCubeArray", StyleType::Type },
						 { "usamplerCubeArray", StyleType::Type },
						 { "samplerBuffer", StyleType::Type },
						 { "isamplerBuffer", StyleType::Type },
						 { "usamplerBuffer", StyleType::Type },
						 { "sampler2DMS", StyleType::Type },
						 { "isampler2DMS", StyleType::Type },
						 { "usampler2DMS", StyleType::Type },
						 { "sampler2DMSArray", StyleType::Type },
						 { "isampler2DMSArray", StyleType::Type },
						 { "usampler2DMSArray", StyleType::Type },
						 { "sampler1DShadow", StyleType::Type },
						 { "sampler2DShadow", StyleType::Type },
						 { "samplerCubeShadow", StyleType::Type },
						 { "sampler2DRectShadow", StyleType::Type },
						 { "sampler1DArrayShadow", StyleType::Type },
						 { "sampler2DArrayShadow", StyleType::Type },
						 { "samplerCubeArrayShadow", StyleType::Type },
						 { "void", StyleType::Type },
						 { "char", StyleType::Type },
						 { "byte", StyleType::Type },
						 { "bool", StyleType::Type },
						 { "short", StyleType::Type },
						 { "int", StyleType::Type },
						 { "atomic_uint", StyleType::Type },
						 { "uint", StyleType::Type },
						 { "long", StyleType::Type },
						 { "float", StyleType::Type },
						 { "double", StyleType::Type },
						 { "signed", StyleType::Type },
						 { "unsigned", StyleType::Type },
						 { "size_t", StyleType::Type },
						 { "wchar_t", StyleType::Type },
						 { "char8_t", StyleType::Type },
						 { "char16_t", StyleType::Type },
						 { "char32_t", StyleType::Type },
						 { "int8_t", StyleType::Type },
						 { "int16_t", StyleType::Type },
						 { "int32_t", StyleType::Type },
						 { "int64_t", StyleType::Type },
						 { "uint8_t", StyleType::Type },
						 { "uint16_t", StyleType::Type },
						 { "uint32_t", StyleType::Type },
						 { "uint64_t", StyleType::Type },
						 { "uintmax_t", StyleType::Type },
						 { "intmax_t", StyleType::Type },
						 { "true", StyleType::Const },
						 { "false", StyleType::Const },
						 { "if", StyleType::KeyWord },
						 { "break", StyleType::KeyWord },
						 { "else", StyleType::KeyWord },
						 { "for", StyleType::KeyWord },
						 { "continue", StyleType::KeyWord },
						 { "while", StyleType::KeyWord },
						 { "do", StyleType::KeyWord },
						 { "switch", StyleType::KeyWord },
						 { "case", StyleType::KeyWord },
						 { "default", StyleType::KeyWord },
						 { "inline", StyleType::KeyWord },
						 { "volatile", StyleType::KeyWord },
						 { "goto", StyleType::KeyWord },
						 { "sizeof", StyleType::KeyWord },
						 { "typeof", StyleType::KeyWord },
						 { "return", StyleType::KeyWord },
						 { "using", StyleType::KeyWord },
						 { "union", StyleType::Type },
						 { "struct", StyleType::Type },
						 { "typedef", StyleType::KeyWord },
						 { "enum", StyleType::Type },
						 { "register", StyleType::KeyWord },
						 { "auto", StyleType::Type },
						 { "inline", StyleType::KeyWord },
						 { "static", StyleType::KeyWord },
						 { "const", StyleType::KeyWord },
						 { "extern", StyleType::KeyWord },
					 }
				 }
};

#undef E_CHARACTERS
#undef E_NUMBERS

